lec2b 36:20: 

... One of the most important principles in prgramming ... If you have
the name of spirt you have control over it.

... don't make up your mind until you're forced to do it ... never be
bound by the consequences of your decisions ... use wishful thinking ...
give a name to to the decsion of how we're going to do it.

... Computer Science is lot like magic, there's a bad part that's a lot like
religion.


... in general people who really believe that you design everything before you
implement, basically, are people who haven't designed very many things.
The real power is that you can pretend you've made the decision.

57:00

... it's alway much harder ... to talk about what something means than to 
go off and do it.

lec3a  55:45
============

... not only is this language implemented in Lisp, ... but the language is
nicely embedded in Lisp. 

1:02:50

What List is great at, - see, Lisp is a lousy language for doing any particular
problem, what it's good for is figuring out the right language that you want
and embedding that in Lisp, that's the real power ...

1:07:49

< a general criticism on the 'mythology' of Software Engineering:
    - splitting task into sub (sub) tasks.
    - only and engineer could that thing that this might work.

  Contrast with Henderson - layers of languages.
    - language of primitive pictures
    - language of geometric combinators
    - language of schemes of combinations (push, .... )


lec3b 0:00:30
=============

... in order to make a system robust it has to be insensitive to small changes.

21:25  We cannot reference into referentially opaque contexts.